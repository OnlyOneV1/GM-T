import math
import numpy as np
from scipy.special import gamma, gammainc, gammaincc
import copy

def Rank(s,M,Q):
    matrix1 = []
    for j in range(M):
        line = []
        for k in range(Q):
            line.append(int(s[Q * j + k]))
        matrix1.append(line)

    a = np.array(matrix1)
    rank = np.linalg.matrix_rank(a)
    #print(rank)
    return rank

def Matrix(bits):
    M = 3
    Q = 3
    n = len(bits)
    N = int(n / (M*Q))
    print(N)
    matrix0 = []
    rank = [0]*N
    for i in range(N):
        x = ''.join(bits[i*M*Q:(i+1)*M*Q])
        matrix0.append(x)
    for j in range(N):
        rank[j] = Rank(matrix0[j],M,Q)

    F = [0]*2
    for i in range(len(rank)):
        if rank[i] == M:
            F[0] += 1
        elif rank[i] == M-1:
            F[1] += 1

    v1 = float((F[0]-0.2888*N)**2)/(0.2888*N)
    v2 = float((F[1]-0.5776*N)**2)/(0.5776*N)
    v3 = float((N-F[0]-F[1]-0.1336*N)**2)/(0.1336*N)
    print(v1,v2,v3)
    v = v1 + v2 + v3
    print(v)
    #p = gammaincc(1, v/2.0)
    p = math.e**(-v/2.0)
    print(p)
    success = (p >= 0.01)
    return success, p, None



if __name__ == "__main__":
    bits = ['1', '0', '0', '0', '0', '0', '0', '1', '0', '1', '0', '0', '0', '1', '1', '1', '0', '1', '1', '1', '1',
            '1', '0', '1', '0', '1', '1', '1', '0', '1', '1', '1', '1', '0', '0', '1', '1', '0', '1', '0', '1', '0',
            '1', '1', '1', '1', '0', '1', '0', '1', '0', '1', '0', '0', '1', '1', '1', '0', '0', '0', '1',
            '1', '0', '1', '1', '0', '0', '0', '0', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '1', '1', '1',
            '1', '1', '1', '1', '0', '0', '0', '0', '1', '0', '0', '1', '0', '0', '0', '0', '0', '1', '1', '1', '0',
            '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1', '1', '0', '1', '0', '0', '1',
            '1', '0', '0', '0', '0', '1', '1', '1', '0', '0', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', '1',
            '0', '1', '1', '0', '0', '1', '0', '1', '1', '1', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '1',
            '1', '0', '1', '1', '0', '0', '0', '1', '0', '0', '1', '1', '1', '1', '1', '1', '0', '0', '1', '1', '0',
            '0',
            '0', '1', '0', '1', '0', '0', '1', '0', '0', '0', '1', '1', '0', '1', '0', '0', '0', '1', '0', '0', '0',
            '0', '0', '0', '1', '0', '1', '1', '1', '0', '0', '0', '1', '1', '0', '1', '0', '0', '0', '0', '0', '1',
            '1', '1', '0', '0', '1', '0', '1', '0', '1', '1', '0', '0', '0', '1', '0', '1', '1', '0', '1', '1', '1',
            '1', '0']
    # bits='01011001001010101101'
    # bits=list(bits)
    s1, s2, s3 = Matrix(bits)
    if s1 == True:
        print("通过检测,p value is %s" % s2)
    else:
        print("未通过检测")





